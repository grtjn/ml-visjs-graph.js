if(void 0===mlvisjsTpls)var mlvisjsTpls={};mlvisjsTpls["ml-visjs-graph.js/mlvisjs-graph.html"]='<div class="row mlvisjs-graph">\n  <div class="col-md-12 graph-controls">\n    <form class="form-inline">\n      <div class="checkbox physics-enabled">\n        <label>\n          <input type="checkbox" name="physicsEnabled" checked="checked">\n          Enable Physics\n        </label>\n      </div>\n      <div class="form-group layout">\n        <label class="sr-only" class="form-control" for="layout"> Layout: </label>\n        <select name="layout">\n          <option value="standard">Standard</option>\n          <option value="hierarchyTop">Hierarchy - Top</option>\n          <option value="hierarchyBottom">Hierarchy - Bottom</option>\n          <option value="hierarchyLeft">Hierarchy - Left</option>\n          <option value="hierarchyRight">Hierarchy - Right</option>\n        </select>\n      </div>\n    </form>\n  </div>\n  <vis-network class="col-md-12 fontawesome"></vis-network>\n</div>\n';var vis=vis||require("vis"),mlvisjs=function(){"use strict";function e(e,t,i){var o;if(e)for(o in e)e.hasOwnProperty(o)&&t.call(i,e[o],o,e);return e}function t(e,i){void 0===t.e&&(t.e=document.createElement("span")),t.e.style.font=i,t.e.innerText=e,document.body.appendChild(t.e);var o={width:t.e.offsetWidth,height:t.e.offsetHeight};return document.body.removeChild(t.e),o}var i=["afterDrawing","animationFinished","beforeDrawing","blurEdge","blurNode","click","configChange","deselectEdge","deselectNode","doubleClick","dragEnd","dragging","dragStart","hidePopup","hold","hoverEdge","hoverNode","initRedraw","oncontext","release","resize","select","selectEdge","selectNode","showPopup","stabilizationIterationsDone","stabilizationProgress","stabilized","startStabilizing","zoom"],o="forceAtlas2Based",n={layout:{hierarchical:!1,randomSeed:2},manipulation:{enabled:!0},interaction:{navigationButtons:!0},height:"500px",nodes:{size:30,borderWidth:2,shadow:!0,borderWidthSelected:6,shape:"circularImage",image:"dist/images/generic.png",color:{background:"white"},font:{size:12}},physics:{enabled:!0,solver:o,forceAtlas2Based:{gravitationalConstant:-200,centralGravity:.01,springLength:100,springConstant:.08,damping:.4,avoidOverlap:0},maxVelocity:150,minVelocity:6,stabilization:{enabled:!0,iterations:1e3,updateInterval:100,onlyDynamicEdges:!1,fit:!1},timestep:.5,adaptiveTimestep:!0},edges:{width:2,shadow:!0,arrows:{to:{enabled:!0,scaleFactor:.75}},font:{size:10,align:"top"},smooth:{type:"curvedCW",roundness:.1}}},s={NW:"#848484",NE:"#428484",SW:"#844284",SE:"#848442",N:"#424284",E:"#428442",S:"#844242",W:"#424242"},a=function(e){if(!vis||!vis.DataSet||!vis.Network)throw"Error: vis.DataSet and vis.Network not found, required by mlvisjs";this.container=e;var t=new vis.DataSet,i=new vis.DataSet,a={nodes:t,edges:i};this.nodes=t,this.edges=i,this.options=n,this.orbColors=s,this.physics=!0,this.solver=o,this.network=new vis.Network(e,a,n),this.setEvents()};a.prototype={setData:function(e,t,i,o){if(arguments.length>0){if(this.nodes&&e)this.nodes.update(e),t&&this.nodes.setOptions(t);else if(e)throw"Error: nodes DataSet not initialized";if(this.edges&&i)this.edges.update(i),o&&this.edges.setOptions(o);else if(i)throw"Error: edges DataSet not initialized"}else{var n={nodes:e=new vis.DataSet,edges:i=new vis.DataSet};this.nodes=e,this.edges=i,this.network.setData(n)}},setEvents:function(o){var n,s=this;s.network&&(0===arguments.length&&i.forEach(function(e){s.network.off(e)}),(o=o||{}).stabilized=o.stabilized||function(){},o.afterDrawing=o.afterDrawing||function(){},e(o,function(i,o){if(function(e){return"function"==typeof e}(i))switch(String(o)){case"click":s.network.on(o,function(){n=!1,window.setTimeout(function(){n||i.apply(s,arguments)},300)});break;case"doubleclick":s.network.on(o,function(){n=!0,i.apply(s,arguments)});break;case"afterDrawing":s.network.on(o,function(o){var n=s.network.getPositions();s.nodes.forEach(function(i){var a=n[i.id];if(a){i.orbs=i.orbs||{};var r=i.edgeCount||i.linkCount;r&&r>0&&!i.orbs.NW&&(i.orbs.NW={label:""+r}),e(i.orbs,function(e,i){var n=a.x,r=a.y;i.match(/W/)?n-=i.match(/[NS]/)?22:30:i.match(/E/)&&(n+=i.match(/[NS]/)?22:30),i.match(/N/)?r-=i.match(/[WE]/)?22:30:i.match(/S/)&&(r+=i.match(/[WE]/)?22:30);var l=e.label,h=e.font||"10px Ludica",c=l&&t(l,h)||{width:e.width||10,height:e.height||10},d=Math.round((e.width||Math.max(c.width,c.height)||10)/2)+2,p=e.lineStyle||"white",u=e.background||s.orbColors[i],v=e.lineWidth||1,m=e.textColor||"white";if(o.strokeStyle=p,o.fillStyle=u,o.lineWidth=v,o.circle(n,r,Math.max(d,10)),o.fill(),o.stroke(),l)o.font=h,o.fillStyle=m,o.fillText(l,n,r-c.height/3);else if(e.image){var g=new Image;g.src=e.image,o.drawImage(g,n-c.width/2,r-c.height/2,c.width,c.height)}})}}),i.apply(s,arguments)});break;case"onload":i(s);break;default:s.network.on(o,i)}}))},setOptions:function(e){this.network&&(e?this.network.setOptions(e):this.network.setOptions(n))},setOrbColors:function(t){var i=this;void 0!==t?e(t,function(e,t){i.orbColors[t]=e}):i.orbColors=s},setPhysics:function(e){this.physics=void 0===e||e,this.network.setOptions({physics:{enabled:this.physics}}),this.physics&&this.network.stabilize()},setSolver:function(e){var t={};this.solver=void 0!==e?e:o,t.physics={solver:this.solver},"hierarchicalRepulsion"!==this.solver&&(t.layout={hierarchical:!1}),this.network.setOptions(t),this.network.stabilize()},setLayout:function(e){var t={edges:{smooth:{type:"curvedCW",roundness:.1}}};void 0===e||"standard"===e?t.layout={hierarchical:!1}:"hierarchyTop"===e?(this.solver="hierarchicalRepulsion",t.layout={hierarchical:{direction:"UD",sortMethod:"directed"}}):"hierarchyBottom"===e?(this.solver="hierarchicalRepulsion",t.layout={hierarchical:{direction:"DU",sortMethod:"directed"}}):"hierarchyLeft"===e?(this.solver="hierarchicalRepulsion",t.layout={hierarchical:{direction:"LR",sortMethod:"directed"}}):"hierarchyRight"===e&&(this.solver="hierarchicalRepulsion",t.layout={hierarchical:{direction:"RL",sortMethod:"directed"}}),t.physics={solver:this.solver},this.network.setOptions(t),this.network.stabilize()}};return{Network:a,Graph:function(e,t,i,o,n){var s=this;s.container=e,s.templateUri=t||"ml-visjs-graph.js/mlvisjs-graph.html",s.templateCache=i;var r=function(e,t){e.innerHTML=t;var i=e.getElementsByTagName("vis-network");if(1===i.length){s.network=new a(i[0]);var r=e.querySelectorAll('input[name="physicsEnabled"]');1===r.length?(s.network.setPhysics(r[0].checked),r[0].onchange=function(){s.network.setPhysics(r[0].checked)}):r.length>1?n("Only one physicsEnabled input supported in the graph template"):n("No physicsEnabled input found in the graph template");var l=e.querySelectorAll('select[name="layout"]');1===l.length?(s.network.setLayout(l[0].value),l[0].onchange=function(){s.network.setLayout(l[0].value)}):l.length>1?n("Only one layout selector supported in the graph template"):n("No layout selector found in the graph template"),o(s)}else i.length>1?n("Only one vis-network supported in the graph template"):n("No vis-network found in the graph template")};s.template=i&&i.get(s.templateUri),s.template?r(s.container,s.template):"ml-visjs-graph.js/mlvisjs-graph.html"===s.templateUri?(s.template=mlvisjsTpls["ml-visjs-graph.js/mlvisjs-graph.html"],s.templateCache&&s.templateCache.put(s.templateUri,s.template),r(s.container,s.template)):function(e,t,i){var o=new XMLHttpRequest;o.open("GET",e,!0),o.onreadystatechange=function(){4===o.readyState&&(o.status>=200&&o.status<400?t(o.responseText):i(o.responseText))},o.send(null)}(s.templateUri,function(e){s.template=e,s.templateCache&&s.templateCache.put(s.templateUri,s.template),r(s.container,s.template)},function(e){n(e)})}}}();("undefined"!=typeof module&&null!==module?module:{}).exports=this.mlvisjs=mlvisjs;